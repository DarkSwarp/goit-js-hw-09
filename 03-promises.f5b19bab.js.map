{"mappings":"gfACAA,EAAA,S,iBAMMC,EAASC,SAASC,cAAc,SAClCC,EAAa,KACbC,EAAY,KACZC,EAAS,KACTC,EAAe,KAGON,EAAnBO,iBAAiB,UAAU,SAAAC,G,kBAeD,SAApBC,IAab,IAAuBC,EAAUC,EACzBC,GADeF,EAZHG,EAYaF,EAZVL,EAafM,EAAgBE,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLP,EACFK,EAAQ,CAAEP,WAAUC,UAEpBO,EAAO,CAAER,WAAUC,S,GAEpBA,E,KApBES,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MACjBW,EAAAC,OAAOC,QAAQ,uBAAwCC,OAAff,EAAS,QAAYe,OAANd,EAAM,M,IAE9De,OAAM,SAAAL,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MAClBW,EAAAC,OAAOI,QAAQ,sBAAuCF,OAAff,EAAS,QAAYe,OAANd,EAAM,M,IAfxD,IAANE,GACFP,EAAeH,EACfM,MAEAH,GAAgBF,EAChBK,I,EAVJD,EAAMoB,iBACNzB,EAAa0B,OAAO7B,EAAO8B,SAASnB,MAAMoB,OAC1C3B,EAAYyB,OAAO7B,EAAO8B,SAASE,KAAKD,OACxC1B,EAASL,EAAO8B,SAASG,OAAOF,MAChC,IAAK,IAAIG,EAAI,EAAGA,GAAK7B,EAAQ6B,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["// all modules\nimport Notiflix from 'notiflix';\n\n// one by one\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// Змінні\nconst formEl = document.querySelector('.form');\nlet firstDelay = null;\nlet stepDelay = null;\nlet amount = null;\nlet currentDelay = null;\n\n// Прослуховування submit та створення Promise\nformEl.addEventListener('submit', event => {\n  event.preventDefault();\n  firstDelay = Number(formEl.elements.delay.value);\n  stepDelay = Number(formEl.elements.step.value);\n  amount = formEl.elements.amount.value;\n  for (let i = 1; i <= amount; i += 1) {\n    if (i === 1) {\n      currentDelay = firstDelay;\n      checkPromise();\n    } else {\n      currentDelay += stepDelay;\n      checkPromise();\n    }\n\n    // Функція для перевірки результату Promise\n    function checkPromise() {\n      createPromise(i, currentDelay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }\n});\n\n// Функція створення Promise\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$stepDelay","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$currentDelay","addEventListener","event","checkPromise","position","delay","shouldResolve","i","Math","random","Promise","resolve","reject","setTimeout","then","param","$h6c0i","Notify","success","concat","catch","failure","preventDefault","Number","elements","value","step","amount","i1","_loop"],"version":3,"file":"03-promises.f5b19bab.js.map"}