{"mappings":"oeACAA,EAAA,S,iBAMM,MAAAC,EAASC,SAASC,cAAc,SACtC,IAAIC,EAAa,KACbC,EAAY,KACZC,EAAS,KACTC,EAAe,KA+BnB,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CArCaT,EAAnBiB,iBAAiB,UAAUC,IAChCA,EAAMC,iBACNhB,EAAaiB,OAAOpB,EAAOqB,SAASZ,MAAMa,OAC1ClB,EAAYgB,OAAOpB,EAAOqB,SAASE,KAAKD,OACxCjB,EAASL,EAAOqB,SAASG,OAAOF,MAChC,IAAK,IAAIG,EAAI,EAAGA,GAAKpB,EAAQoB,GAAK,EAAG,CAUN,SAApBC,IACPnB,EAAckB,EAAGnB,GACdqB,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAAC,OAAOC,QAAQ,uBAAqBtB,QAAiBC,MAAU,IAEhEsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBmB,EAAAC,OAAOG,QAAQ,sBAAoBxB,QAAiBC,MAAU,G,CAf1D,IAANgB,GACFnB,EAAeH,EACfuB,MAEApB,GAAgBF,EAChBsB,I","sources":["src/js/03-promises.js"],"sourcesContent":["// all modules\nimport Notiflix from 'notiflix';\n\n// one by one\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// Змінні\nconst formEl = document.querySelector('.form');\nlet firstDelay = null;\nlet stepDelay = null;\nlet amount = null;\nlet currentDelay = null;\n\n// Прослуховування submit та створення Promise\nformEl.addEventListener('submit', event => {\n  event.preventDefault();\n  firstDelay = Number(formEl.elements.delay.value);\n  stepDelay = Number(formEl.elements.step.value);\n  amount = formEl.elements.amount.value;\n  for (let i = 1; i <= amount; i += 1) {\n    if (i === 1) {\n      currentDelay = firstDelay;\n      checkPromise();\n    } else {\n      currentDelay += stepDelay;\n      checkPromise();\n    }\n\n    // Функція для перевірки результату Promise\n    function checkPromise() {\n      createPromise(i, currentDelay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }\n});\n\n// Функція створення Promise\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$stepDelay","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$currentDelay","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","Number","elements","value","step","amount","i","checkPromise","then","$iQIUW","Notify","success","catch","failure"],"version":3,"file":"03-promises.50720189.js.map"}